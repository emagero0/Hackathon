# Set the server port to 8081 to avoid conflict with the default 8080
server.port=8081

# LLM Microservice Configuration
# For local development (when running outside Docker)
llm.python.service.baseurl=http://localhost:8001
# For Docker environment (uncomment when running in Docker)
# llm.python.service.baseurl=http://gemini-python-service:8000

# Google Gemini Configuration Removed (Service deleted)
# gemini.api.key=...
# gemini.api.endpoint=...

# Resilience4j Configuration Removed for Gemini (Service deleted)
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.registerHealthIndicator=true
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.slidingWindowType=COUNT_BASED
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.slidingWindowSize=10
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.minimumNumberOfCalls=5
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.waitDurationInOpenState=5s
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.failureRateThreshold=50
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.waitDurationInOpenState=5s
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.failureRateThreshold=50
# resilience4j.circuitbreaker.instances.geminiCircuitBreaker.eventConsumerBufferSize=10
#
# resilience4j.retry.instances.geminiRetry.maxAttempts=3
# resilience4j.retry.instances.geminiRetry.waitDuration=500ms
# resilience4j.retry.instances.geminiRetry.retryExceptions=org.springframework.web.reactive.function.client.WebClientResponseException,java.util.concurrent.TimeoutException,java.io.IOException
# resilience4j.retry.instances.geminiRetry.ignoreExceptions=

# Dynamics 365 Business Central Configuration
dynamics.bc.odata.base-url=https://bctest.dayliff.com:7048/BC160/ODataV4/Company('KENYA')
dynamics.bc.odata.username=${DYNAMICS_BC_USERNAME:webservice}
# Using environment variables for sensitive information
dynamics.bc.odata.key=${DYNAMICS_BC_API_KEY}
# Field name in Business Central Job entity to update with AI status
dynamics.bc.odata.status-field-name=AI_Verification_Status

# RabbitMQ Configuration (Defaults for local setup)
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
# Provide username/password if your RabbitMQ setup requires authentication
# spring.rabbitmq.username=guest
# spring.rabbitmq.password=guest

# Tesseract OCR Configuration
# tesseract.path=... # Optional: Only needed if Tesseract executable is not in system PATH
tesseract.datapath=C:/Program Files/Tesseract-OCR/tessdata

# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/aierpdb?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Explicitly set the dialect for MySQL 8+
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Automatically update the schema based on JPA entities
spring.jpa.hibernate.ddl-auto=update

# Logging Configuration
logging.level.com.erp.aierpbackend.listener=DEBUG
# Added for detailed verification logs
logging.level.com.erp.aierpbackend.service.JobDocumentVerificationService=DEBUG
# Added for detailed PDF extraction logs
logging.level.com.erp.aierpbackend.util.PdfDataExtractor=DEBUG
