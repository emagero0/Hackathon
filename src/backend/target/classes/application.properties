# Set the server port to 8081 to avoid conflict with the default 8080
server.port=8081

# Google Gemini Configuration (Replace YOUR_API_KEY with your actual key)
gemini.api.key=YOUR_API_KEY
# Example endpoint structure - adjust based on the specific Gemini model and task
# e.g., https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent
gemini.api.endpoint=https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent # Adjust as needed

# Resilience4j Configuration (Updated instance names)
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.geminiCircuitBreaker.eventConsumerBufferSize=10

resilience4j.retry.instances.geminiRetry.maxAttempts=3
resilience4j.retry.instances.geminiRetry.waitDuration=500ms
resilience4j.retry.instances.geminiRetry.retryExceptions=org.springframework.web.reactive.function.client.WebClientResponseException,java.util.concurrent.TimeoutException,java.io.IOException
resilience4j.retry.instances.geminiRetry.ignoreExceptions=
